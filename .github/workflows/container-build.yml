# Copyright 2025 John Casey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Push Container

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: quay.io
  IMAGE_NAME: jdcasey/myshift-go
  GO111MODULE: on
  GOPROXY: direct
  GOSUMDB: off

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Run go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted properly:"
            gofmt -s -d .
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

  security:
    name: Security Analysis
    uses: ./.github/workflows/security-scan-reusable.yml
    with:
      upload_sarif: true

  build-and-push:
    needs: [lint, test, security]
    uses: ./.github/workflows/container-build-reusable.yml
    with:
      image_tags: "latest ${{ github.sha }}"
      push_image: true
    secrets:
      registry_username: ${{ secrets.QUAY_BOT_USER }}
      registry_password: ${{ secrets.QUAY_BOT_PASSWORD }} 
