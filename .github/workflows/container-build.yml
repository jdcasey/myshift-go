# Copyright 2025 John Casey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Push Container

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: quay.io
  IMAGE_NAME: jdcasey/myshift-go
  GO111MODULE: on
  GOPROXY: off
  GOSUMDB: off

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify checkout
        run: |
          pwd
          ls -la .
          echo "--- Checking git status ---"
          git status
          echo "--- Checking go.mod exists ---"
          test -f go.mod && echo "go.mod found" || echo "go.mod NOT found"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Debug module info
        run: |
          echo "Current directory: $(pwd)"
          echo "Go version: $(go version)"
          echo "Go env GOMOD: $(go env GOMOD)"
          echo "Go env GOPATH: $(go env GOPATH)"
          echo "Go env GOPROXY: $(go env GOPROXY)"
          echo "Go env GO111MODULE: $(go env GO111MODULE)"
          ls -la
          echo "--- go.mod content ---"
          cat go.mod
          echo "--- Checking if we're in a module ---"
          go list -m || echo "Not in a Go module context"
          echo "--- Listing all packages ---"
          go list ./... || echo "Failed to list packages"

      - name: Initialize module properly
        run: |
          echo "Ensuring we're in the correct module context..."
          go mod tidy
          go list -m
          echo "--- Verifying local packages are accessible ---"
          go list ./pkg/myshift
          go list ./internal/...

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Pre-build verification
        run: |
          echo "Testing if all imports resolve correctly..."
          go build -n ./internal/pagerduty
          echo "Success: All imports resolve"

      - name: Run go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted properly:"
            gofmt -s -d .
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify checkout
        run: |
          pwd
          ls -la .
          echo "--- Checking go.mod exists ---"
          test -f go.mod && echo "go.mod found" || echo "go.mod NOT found"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Debug module info
        run: |
          echo "Current directory: $(pwd)"
          echo "Go version: $(go version)"
          echo "Go env GOMOD: $(go env GOMOD)"
          echo "Go env GOPATH: $(go env GOPATH)"
          echo "Go env GOPROXY: $(go env GOPROXY)"
          echo "Go env GO111MODULE: $(go env GO111MODULE)"
          ls -la pkg/
          echo "--- go.mod content ---"
          cat go.mod
          echo "--- Checking if we're in a module ---"
          go list -m || echo "Not in a Go module context"

      - name: Initialize module properly
        run: |
          echo "Ensuring we're in the correct module context..."
          go mod tidy
          go list -m
          echo "--- Verifying local packages are accessible ---"
          go list ./pkg/myshift
          go list ./internal/...

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Verify module build
        run: |
          echo "Testing module compilation..."
          go list ./...
          echo "Building all packages..."
          go build ./...

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify checkout
        run: |
          pwd
          ls -la .
          echo "--- Checking go.mod exists ---"
          test -f go.mod && echo "go.mod found" || echo "go.mod NOT found"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Debug module info
        run: |
          echo "Current directory: $(pwd)"
          echo "Go version: $(go version)"
          echo "Go env GOMOD: $(go env GOMOD)"
          echo "Go env GOPATH: $(go env GOPATH)"
          echo "Go env GOPROXY: $(go env GOPROXY)"
          echo "Go env GO111MODULE: $(go env GO111MODULE)"
          echo "--- go.mod content ---"
          cat go.mod
          echo "--- Checking if we're in a module ---"
          go list -m || echo "Not in a Go module context"

      - name: Initialize module properly
        run: |
          echo "Ensuring we're in the correct module context..."
          go mod tidy
          go list -m
          echo "--- Verifying local packages are accessible ---"
          go list ./pkg/myshift
          go list ./internal/...

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Pre-build verification
        run: |
          echo "Testing if all imports resolve correctly..."
          go build -n ./internal/pagerduty
          echo "Success: All imports resolve"

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec -fmt sarif -out results.sarif -stdout -verbose=text ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        if: always()

  build-and-push:
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build container image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: myshift-go
          containerfiles: |
            ./Containerfile
          tags: latest ${{ github.sha }}

      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/jdcasey
          username: ${{ secrets.QUAY_BOT_USER }}
          password: ${{ secrets.QUAY_BOT_PASSWORD }}

      - name: Print image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}" 